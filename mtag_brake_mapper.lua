---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by MONTAG
--- DateTime: 4/11/2020 4:34 PM
---

logMsg("Staring up Brake pedal mapper...")

if not SUPPORTS_FLOATING_WINDOWS then
    -- to make sure the script doesn't stop old FlyWithLua versions
    logMsg("MTAG Brake mapper: imgui not supported by your FlyWithLua version")
    return
end

local PluginTitle = 'MTG Brake Pedal Mapper'
local wnd_open = 0
local makeRed = false
local choice = 1
local choices = {"No Mapping", "Mirror Left Toe -> Right", "Mirror Right Toe -> Left"}
local SettingsFile = 'mtg-brake-mapper-settings.txt'
--XPlane Data Refs
DataRef( "datBrakeAxis",     "sim/joystick/joystick_axis_values", 1)
DataRef( "datBrakeLeft",     "sim/cockpit2/controls/left_brake_ratio", "writable")
DataRef( "datBrakeRight",    "sim/cockpit2/controls/right_brake_ratio", "writable")

--Methods
function MTAG_ToggleWindow()
 if wnd_open == 0 then
  logMsg('MTAG... open widow')
  MTAG_wnd = float_wnd_create(380, 312, 1, true)
  float_wnd_set_title(MTAG_wnd, PluginTitle)
  float_wnd_set_imgui_builder(MTAG_wnd, "MTAG_main_menu")
  float_wnd_set_onclose(MTAG_wnd, "MTAG_closed")
  wnd_open = 1
 else
  float_wnd_destroy(MTAG_wnd)
 end
end

function MTAG_closed(wnd)
 logMsg('MTAG... close widow')
 wnd_open = 0
end

function MTAG_main_menu(wnd, x, y)
    imgui.TextUnformatted("MTAG brake mapper allows you to map brake pedals \nin XPlane to deal with issues with some\nuser's pedals.  In my situation, my right toe \npedal kept failing. (Thrust-master Junk!) \n\nThis can be used as a temporary fix or\njust for user preference. \n\nNOTE: You must disable the pedal you don't\nwish to use in Joystick Settings!")
    if imgui.RadioButton(choices[1], choice == 1) then
        choice = 1
    end
    if imgui.RadioButton(choices[2], choice == 2) then
        choice = 2
    end
    if imgui.RadioButton(choices[3], choice == 3) then
        choice = 3
    end

    if imgui.TreeNode("Toe Brake Readings") then
        imgui.TextUnformatted("Mode: " .. choices[choice])
        imgui.TextUnformatted("Left Toe: " .. datBrakeLeft)
        imgui.TextUnformatted("Right Toe: " .. datBrakeRight)
        if imgui.Button("Reset Toes") then
                datBrakeLeft = 0
                datBrakeRight = 0
        end
        imgui.TreePop()
    end

    imgui.TextUnformatted("\nClick 'Save Settings' to store preference to\nload on restart of X-Plane")

    if imgui.Button("Save Settings") then
        save_settings()
    end


end


function brakes_check()
    if choice == 2 then
        datBrakeRight = datBrakeLeft
    elseif choice == 3 then
       datBrakeLeft = datBrakeRight
    end
end
function file_exists(file)
  local f = io.open(file, "r")
  if f then f:close() end
  return f ~= nil
end

function save_settings()
 local f = io.open(SCRIPT_DIRECTORY..SettingsFile, "w")
 f:write(choice)
 f:close()
end

function load_settings()
    logMsg("MTG Loading settings...")
    if file_exists(SCRIPT_DIRECTORY..SettingsFile) then
        local new_choice = ""
        for line in io.lines(SCRIPT_DIRECTORY..SettingsFile) do
            new_choice = line
        end
        choice = tonumber(new_choice)
        logMsg("MTG Settings found and loaded." ..  choice)
    end
end

load_settings();
do_every_frame("brakes_check()")
add_macro("MTAG Brake Mapper", "MTAG_ToggleWindow()")